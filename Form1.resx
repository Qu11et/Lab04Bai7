<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YyLTdSBodObUkbcSvQy9Rt03n7j1GYnXt//Z
</value>
  </data>
</root>